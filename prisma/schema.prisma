// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model role {
  id        Int      @default(autoincrement()) @id
  name      String
  users    user[]
}

model user {
  id        Int      @default(autoincrement()) @id
  name      String
  email     String
  password  String
  role_id      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  role      role     @relation(fields: [role_id], references: [id])
  service service[]
}

model jenis_kerusakan {
  id          Int      @default(autoincrement()) @id
  nama_kerusakan String
  saran          String
  manfaat        String
  service_detail service_detail[]
}

model service {
  id                Int      @default(autoincrement()) @id
  tanggal_service   DateTime
  id_service        String
  id_user           Int
  nama_pelanggan    String
  nomor_kendaraan   String
  tipe_bodi         String
  merk_mobil        String
  accepted          Boolean
  status_pekerjaan  String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  user              user     @relation(fields: [id_user], references: [id])
}

model service_detail {
  id                  Int      @default(autoincrement()) @id
  id_service          String
  id_jenis_kerusakan  Int
  foto_before         String
  foto_after          String
  jenis_kerusakan     jenis_kerusakan @relation(fields: [id_jenis_kerusakan], references: [id])
}